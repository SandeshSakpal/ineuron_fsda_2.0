--1. Load the given dataset into snowflake with a primary key to Order Date column.


CREATE OR REPLACE TABLE SS_SALES_DATA
    (order_id VARCHAR(20),
    order_date STRING PRIMARY KEY,
    ship_date STRING,
    ship_mode VARCHAR(30),
    customer_name VARCHAR(30),
    segment CHAR(20),
    state VARCHAR(50),
    country VARCHAR(50),
    market VARCHAR(10),
    region VARCHAR(30),
    product_id VARCHAR (50),
    category VARCHAR(30),
    sub_category VARCHAR(30),
    product_name VARCHAR(150),
    sales NUMBER(5),
    quantity NUMBER(2),
    discount NUMBER(5,2),
    profit NUMBER(7,2),
    shipping_cost NUMBER(5,2),
    order_priority VARCHAR(9),
    year NUMBER(4)
    );

DESCRIBE TABLE SS_SALES_DATA;

SELECT * FROM SS_SALES_DATA;

CREATE TABLE SS_SALES_DATA_COPY AS SELECT * FROM SS_SALES_DATA;

SELECT * FROM SS_SALES_DATA_COPY;

SELECT * FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE;

-- 2 CHANGE PRIMARY KEY TO ORDER ID

ALTER TABLE SS_SALES_DATA_COPY DROP PRIMARY KEY;

ALTER TABLE SS_SALES_DATA_COPY ADD PRIMARY KEY (order_id);

DESCRIBE TABLE SS_SALES_DATA_COPY;

--3. Check the data type for Order date and Ship date and mention in what data type it should be

--DATE TYPE WAS MM-DD-YYYY SO CONVERTED INTO YYYY-MM-DD

--4. Create a new column called order_extract and extract the number after the last ‘–‘from Order ID column

SELECT*,
    SPLIT_PART(order_id, '-', '-1') AS Order_extract

FROM SS_SALES_DATA_COPY;

--5. Create a new column called Discount Flag and categorize it based on discount. Use ‘Yes’ if the discount is greater than zero else ‘No’P

SELECT *,
    CASE WHEN discount >0 THEN 'Yes'
         ELSE 'No'
         END AS Discount_Flag_Categorize
FROM "DATAANALYTICS"."PUBLIC"."SS_SALES_DATA_COPY";

--6. Create a new column called process days and calculate how many days it takes for each order id to process from the order to its shipment.

CREATE OR REPLACE TABLE SS_SALES_DATA_COPY AS
SELECT*,
    DATEDIFF('DAYS', order_date, ship_date) AS PROCESS_DAYS
FROM "DATAANALYTICS"."PUBLIC"."SS_SALES_DATA_COPY";


--7. Create a new column called Rating and then based on the Process dates give rating like given below.

--a. If process days less than or equal to 3days then rating should be 5
--b. If process days are greater than 3 and less than or equal to 6 then rating should be 4
--c. If process days are greater than 6 and less than or equal to 10 then rating should be 3
--d. If process days are greater than 10 then the rating should be 2

SELECT *,
    CASE WHEN PROCESS_DAYS >10 THEN 2
         WHEN PROCESS_DAYS >6 THEN 3
         WHEN PROCESS_DAYS >3 THEN 4
         WHEN PROCESS_DAYS <=3 THEN 5
         END AS RATING
FROM "DATAANALYTICS"."PUBLIC"."SS_SALES_DATA_COPY";
